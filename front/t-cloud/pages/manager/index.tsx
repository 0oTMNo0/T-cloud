import { ClassNames } from '@emotion/react'
import { GetServerSideProps } from 'next'
import classNames from 'classnames'
import { Dropdown } from 'flowbite-react'
import Cookies from 'js-cookie'
import Head from 'next/head'
import React, { useEffect, useState } from 'react'
import { useDispatch, useSelector } from 'react-redux'
import CardMangerOrder from '../../src/component/CardMangerOrder'
import CardMangerProduct from '../../src/component/CardMangerProduct'
import Icon from '../../src/component/Icon'
import Header from '../../src/layout/Header'
import { fetchCategories, fetchProducts } from '../../src/redux/slice/productSlice'
import Footer from '../../src/layout/Footer'
import MyModalAddProduct from '../../src/layout/MyModalAddProduct'
// import { Badge, Button, Dropdown } from 'flowbite-react'

const index = ({ orderList,token }: any) => {
    
        
    const dispatch = useDispatch();
    const [pageProduct, setPageProduct] = useState<boolean>(true);
    const [productId, setProductId] = useState<number | undefined>();
    const [order, setOrder] = useState<any>();
    const [openModal, setOpenModal] = useState<boolean>(false);

    const productList = useSelector((state: any) => state.product.product)
    const categoryList = useSelector((state: any) => state.product.category)

    useEffect(() => {
        dispatch((fetchProducts()))
        dispatch((fetchCategories()))
    }, [])

    return (
        <div>
            <Head>
                <title>T-Cloud</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
                <Header />


            <main className='bg-mybackground w-screen flex justify-center items-center p-8 gap-[1px] sm:flex-row flex-col-reverse font-IR'>

                <section className='sm:w-3/5 w-full  flex items-center justify-end flex-col h-[530px]'>

                    <div className='absolute translate-y-[-260px] hidden sm:block'>
                        <Icon />
                    </div>
                    <div className='h-[430px] bg-mywhite w-full overflow-y-scroll no-scrollbar rounded-l-md'>

                        {pageProduct ?
                            (
                                <>
                                <table className='w-full'>
                                    <thead className='rounded'>
                                        <tr className='bg-mywhite'>
                                            <td className='w-1/5 text-center'>سایز</td>
                                            <td className='w-1/5 text-center'>دسته بندی</td>
                                            <td className='w-1/5 text-center'>جنسیت</td>
                                            <td className='w-1/5 text-center'>قیمت</td>
                                            <td className='w-1/5 text-center'>کالا</td>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        {productList?.map((product: any, index: number) => (
                                            <tr key={index} className='odd:bg-myprimary-200 odd:bg-opacity-25 hover:border-b-myprimary-200 border-2 border-transparent cursor-context-menu' onClick={() => {
                                                setProductId(product.id)
                                            }}>
                                                <td className='w-3/12 text-right'>{
                                                    product.options?.map((size: any) => (
                                                        size + ' '
                                                    ))
                                                }</td>
                                                <td className='w-1/12 text-center'>{
                                                    categoryList?.find((category: any) => category.id === product.category)?.name
                                                }</td>
                                                <td className='w-1/12 text-center'>{
                                                    product.featured ? 'مردانه' : 'زنانه'
                                                }</td>
                                                <td className='w-1/12 text-center'>{product.final_price}</td>
                                                <td className='w-6/12 text-right whitespace-nowrap text-ellipsis'>{product.name}</td>
                                            </tr>
                                        ))}
                                    </tbody>
                                </table>
                                <button className='absolute bg-myprimary-200 hover:bg-myprimary-100 text-white font-bold py-2 px-4 rounded-full top-[560px] left-10' onClick={() => {
                                    setOpenModal(true)
                                    console.log(openModal)
                                }}>+</button>
                                </>
                            ) : (
                                <table className='w-full'>
                                    <thead className='rounded'>
                                        <tr className='bg-mywhite'>
                                            <td className='w-2/12 text-center'>وضعیت</td>
                                            <td className='w-4/12 text-center'>تاریخ سفارش</td>
                                            <td className='w-2/12 text-center'>شماره آدرس</td>
                                            <td className='w-1/12 text-center'>کاربر</td>
                                            <td className='w-2/12 text-center'>شماره سفارش</td>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        {orderList?.map((order: any, index: number) => (
                                            <tr key={index} className='odd:bg-myprimary-200 odd:bg-opacity-25 hover:border-b-myprimary-200 border-2 border-transparent cursor-context-menu' onClick={() => {
                                                setOrder(order)
                                            }}>
                                                <td className='w-2/12 text-center'>{order?.status}</td>
                                                <td className='w-4/12 text-center'>{
                                                    (order?.created).split('T')[0]
                                                }</td>
                                                <td className='w-2/12 text-center'>{order?.address}</td>
                                                <td className='w-1/12 text-center'>{order?.user}</td>
                                                <td className='w-2/12 text-center'>{order?.id}</td>
                                            </tr>
                                        ))}
                                    </tbody>
                                </table>
                            )}
                    </div>
                </section>
                <section className='sm:w-2/5 w-full'>



                    <div className='w-full flex justify-around gap-1 text-white'>

                        <button className={
                            classNames(
                                pageProduct ? 'bg-myprimary-200 rounded-t-md py-1 w-1/2 hover:bg-myprimary-100' : 'bg-mywhite rounded-t-md py-1 w-1/2 text-myblack'
                            )
                        } onClick={() => { setPageProduct(!pageProduct) }}>
                            سفارش ها
                        </button>
                        <button className={
                            classNames(
                                pageProduct ? 'bg-mywhite rounded-t-md py-1 w-1/2 text-myblack' : 'bg-myprimary-200 rounded-t-md py-1 w-1/2 hover:bg-myprimary-100'
                            )
                        } onClick={() => { setPageProduct(!pageProduct) }}>
                            محصولات
                        </button>
                    </div>


                    {
                        pageProduct ? (
                            <CardMangerProduct id={productId} product={
                                productList?.find((product: any) => product.id === productId)
                            } />
                        ) : (
                            <CardMangerOrder order={order} />
                        )
                    }

                </section>
            </main>

            <MyModalAddProduct opened={openModal} onClose={(value: boolean) => { setOpenModal(value) }} />
            <Footer/>
        </div>
    )
}

export default index

export async function getServerSideProps(context: any) {

    let list: any
    const token = (context.req.headers.cookie.split('=')[3]).split(';')[0]

    await fetch('http://localhost:8000/store/order'
        , {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': 'Token ' + token
            }
        }).then(response => response.json())
        .then(data => {
            list = data
        }).catch(err => console.error(err));
    return {
        props: {
            orderList: list,
            token:token
        }
    }
}




